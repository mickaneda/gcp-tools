#!/usr/bin/env bash

HELP="Usage: gce make_image [-fd] <input instance name> <output image name>

  -f   Force to create new image (delete if it already exists)
  -d   Delete input instance after creating image
"

force=0
delete=0
input=""
output=""
while [ $# -gt 0 ];do
  case $1 in
    -f)force=1;;
    -d)delete=1;;
    *)
      if [ -z "$input" ];then
        input=$1
      elif [ -z "$output" ];then
        output=$1
      else
        echo "$HELP"
        exit 1
      fi
      ;;
  esac
  shift
done

instance=($(gcloud compute instances list|grep "^$input "))

if [ "${#instance[@]}" -eq 0 ];then
  echo "$input is not available"
  exit 1
fi

zone="${instance[1]}"

exec_cmd () {
  cmd="$*"
  echo "$ $cmd"
  eval "$cmd"
  ret=$?
  if [ $ret -ne 0 ];then
    echo "Failed"
    exit $ret
  fi
}

if [ $force -eq 1 ];then
  echo y|gcloud compute snapshots delete "$input" >&/dev/null
  echo y|gcloud compute disks delete $output --zone $zone >&/dev/null
  echo y|gcloud compute images delete "$output" >&/dev/null
fi
exec_cmd gcloud compute disks snapshot "$input" --snapshot-names "$input" --zone "$zone"
exec_cmd gcloud compute disks create "$output" --source-snapshot "$input" --zone "$zone"
exec_cmd gcloud compute images create "$output" --source-disk "$output" --source-disk-zone "$zone"
exec_cmd "echo y|gcloud compute snapshots delete $input"
exec_cmd "echo y|gcloud compute disks delete $output --zone $zone"
if [ "$delete" -eq 1 ];then
  exec_cmd "echo y|gcloud compute instances delete $input"
fi
